import{_ as e,c as o,o as a,a2 as t}from"./chunks/framework.DfWqqJOM.js";const S=JSON.parse('{"title":"前言","description":"","frontmatter":{},"headers":[],"relativePath":"从零学习开发操作系统——《操作系统真相还原》学习笔记/00_前言.md","filePath":"从零学习开发操作系统——《操作系统真相还原》学习笔记/00_前言.md"}'),c={name:"从零学习开发操作系统——《操作系统真相还原》学习笔记/00_前言.md"},i=t('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><h2 id="一、环境" tabindex="-1">一、环境 <a class="header-anchor" href="#一、环境" aria-label="Permalink to &quot;一、环境&quot;">​</a></h2><blockquote><p>GCC #C语言编译器</p></blockquote><blockquote><p>NASM #汇编语言编译器</p></blockquote><p>NASM优势：是一个为可移植性与模块化而设计的一个80x86 的汇编器。它支持相当多的目标文件格式，包括 Linux 和&#39;NetBSD/FreeBSD&#39;，&#39;a.out&#39;，&#39;ELF&#39;，&#39;COFF&#39;，微软 16 位的&#39;OBJ&#39;和&#39;Win32&#39;。它还可以输出纯二进制文件。它的语法设计得相当的简介易懂，和 Intel 语法相似但更简单。它支持&#39;Pentium&#39;，&#39;P6&#39;，&#39;MMX&#39;， &#39;3DNow!&#39;，&#39;SSE&#39;和&#39;SSE2&#39;指令集。</p><h2 id="二、虚拟机" tabindex="-1">二、虚拟机 <a class="header-anchor" href="#二、虚拟机" aria-label="Permalink to &quot;二、虚拟机&quot;">​</a></h2><blockquote><p>bochs</p></blockquote><p>优势：（来自原文）</p><p><em>（1）开源，有感于作者的奉献精神，我们要支持作者（当然 qemu 也是）。 （2）支持调试，不仅原生支持调试，还支持 gdb 远程调试（当然 qemu 也是）。</em> Bochs（发音：box）是一个以 LGPL 许可证发放的开放源代码的 x86、x86-64IBM PC 兼容机模拟器和调试工具。它支持处理器（包括保护模式）、内存、硬盘、显示器、以太网、BIOS、IBM PC 兼容机的常见硬件外设的仿真。 许多客户操作系统能通过该仿真器运行，包括DOS、Microsoft Windows 的一些版本、AmigaOS 4、 BSD、Linux、MorphOS、Xenix 和 Rhapsody（Mac OS X 的前身）。Bochs 能在许多主机操作系统运行，例如 Windows、Windows Mobile、Linux、Mac OS X、iOS 和 PlayStation 2。 Bochs 主要用于操作系统开发（当一个模拟操作系统崩溃，它不崩溃主机操作系统，所以可以调试仿真操作系统）和在主机操作系统运行其他来宾操作系统。它也可以用来运行不兼容的旧的软件（如电脑游戏）。 它的优点在于能够模拟跟主机不同的机种，例如在Sparc 系统里模拟x86，但缺点是它的速度却慢得多。</p><blockquote><p>VirtualBox</p></blockquote>',10),r=[i];function n(s,_,l,p,d,h){return a(),o("div",null,r)}const b=e(c,[["render",n]]);export{S as __pageData,b as default};
